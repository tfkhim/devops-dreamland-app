name: deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      hasNextVersion: ${{ steps.get_next_version.outputs.hasNextVersion }}
      version: ${{ steps.get_next_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get next version
        id: get_next_version
        run: |
          CURRENT="$(docker run --rm -v $PWD:/tmp --workdir /tmp ghcr.io/caarlos0/svu current --strip-prefix)"
          NEXT="$(docker run --rm -v $PWD:/tmp --workdir /tmp ghcr.io/caarlos0/svu next --strip-prefix)"
          if [ "${CURRENT}" = "${NEXT}" ]; then
            HAS_NEXT_VERSION="false"
          else
            HAS_NEXT_VERSION="true"
          fi
          echo "version=${NEXT}" >> "${GITHUB_OUTPUT}"
          echo "hasNextVersion=${HAS_NEXT_VERSION}" >> "${GITHUB_OUTPUT}"

  push:
    needs: version
    if: needs.version.outputs.hasNextVersion == 'true'
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v22

      - name: Install required Nix packages
        run: nix develop --command true

      - name: Update project version
        run: |
          VERSION="${{ needs.version.outputs.version }}"
          nix develop --command cargo set-version "${VERSION}"
          git add Cargo.toml Cargo.lock
          git config user.email '${{ vars.GIT_USER_EMAIL }}'
          git config user.name '${{ vars.GIT_USER_NAME }}'
          git commit -m "build: update project version to ${VERSION}"

      - name: Build image
        run: nix build

      - name: Log in to GitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        run: |
          IMAGE=ghcr.io/${{ github.repository }}:${{ needs.version.outputs.version }}
          nix develop --command load-image-with-tag "${IMAGE}"
          docker push "${IMAGE}"

      - name: Tag commit and push changes
        run: |
          TAG_NAME="${{ needs.version.outputs.version }}"
          git tag "${TAG_NAME}"
          git push origin '${{ github.ref_name }}' "${TAG_NAME}"

      - name: Docker logout
        run: docker logout

  deploy:
    needs: [version, push]
    if: needs.version.outputs.hasNextVersion == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout of config repository
        uses: actions/checkout@v4
        with:
          repository: 'tfkhim/devops-dreamland-config'
          token: ${{ secrets.CONFIG_REPO_TOKEN }}

      - name: Update demo-app version
        run: sed -i -r 's/(image:.*devops-dreamland-app:)[.a-zA-Z0-9]+/\1${{ needs.version.outputs.version }}/' apps/demo-app/deployment.yaml

      - name: Push new version
        run: |
          git add apps/demo-app/deployment.yaml
          git config user.email '${{ vars.GIT_USER_EMAIL }}'
          git config user.name '${{ vars.GIT_USER_NAME }}'
          git commit -m 'ops(demo-app): deploy version ${{ needs.version.outputs.version }}'
          git push
